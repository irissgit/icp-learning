import Nat "mo:base/Nat";
import Text "mo:base/Text";
actor {
    
    //https://gist.github.com/ninegua/d2a1b4452833bc0d606556e7ac8713f1
    public type HeaderField = (Text, Text);
    public type HttpRequest = {
        url : Text;
        method : Text;
        body : [Nat8];
        headers : [HeaderField];
    };
    public type HttpResponse = {
        body : Blob; //[Nat8];
        headers : [HeaderField];
        streaming_strategy : ?StreamingStrategy;
        status_code : Nat16;
    };

    public type Key = Text;
    public type ChunkId = Nat;

    public type SetAssetContentArguments = {
        key : Key;
        sha256 : ?[Nat8];
        chunk_ids : [ChunkId];
        content_encoding : Text;
    };

    public type StreamingCallbackHttpResponse = {
        token : ?StreamingCallbackToken;
        body : [Nat8];
    };
    public type StreamingCallbackToken = {
        key : Key;
        sha256 : ?[Nat8];
        index : Nat;
        content_encoding : Text;
    };
    public type StreamingStrategy = {
        #Callback : {
        token : StreamingCallbackToken;
        callback : shared query StreamingCallbackToken -> async ?StreamingCallbackHttpResponse;
        };
    };

    stable var currentValue : Nat = 2;
    // Increment the counter with the increment function.
    public func increment() : async () {
        currentValue += 1;
    };
    // Read the counter value with a get function.
    public query func get() : async Nat {
        currentValue
    };
    // Write an arbitrary value with a set function.
    public func set(n: Nat) : async () {
        currentValue := n;
    };

    public shared query func http_request(request:  HttpRequest): async HttpResponse {
        {
            body = Text.encodeUtf8("<html><body><h1>"# "my counter number is "# Nat.toText(currentValue) #"</h1></body></html>");
            headers = [];
            streaming_strategy = null;
            status_code = 200;
/*
            body = Text.encodeUtf8(Nat.toText(currentValue));
            headers = [("Content-Type","text/plain")];
            status_code = 200;
*/
        }
    }
};
